import{_ as a,c as o,a as n,b as r,e as c,w as d,r as i,o as s,d as p}from"./app-D7GTOmel.js";const h={};function l(m,e){const t=i("VPLink");return s(),o("div",null,[e[1]||(e[1]=n('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>如果树中每个节点最多只能有两个子节点，这样的树就称为 <code>二叉树</code></p><p>二叉树可以为空，也就是没有节点</p><p>若二叉树不为空，则它由根节点和称为其左子树 TL 和右子树 TR 的两个不相交的二叉树组成</p><h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h2><ul><li>一个二叉树第 <code>i</code> 层的最大节点数为: <code>2^(i-1)</code> <code>i &gt;= 1</code></li><li>深度为 <code>k</code> 的二叉树有最大节点总数为: <code>2^k-1</code> <code>k &gt;= 1</code></li><li>对任何非空二叉树 <code>T</code> ，若 <code>n0</code> 表示叶节点多个数 <code>n2</code> 是度为 <code>2</code> 的非叶节点个数，那么两者满足关系 <code>n0 = n2 + 1</code></li></ul><h2 id="其他树" tabindex="-1"><a class="header-anchor" href="#其他树"><span>其他树</span></a></h2><h3 id="完美二叉树-满二叉树" tabindex="-1"><a class="header-anchor" href="#完美二叉树-满二叉树"><span>完美二叉树/满二叉树</span></a></h3><p>除了最下一层的叶节点外，每一层节点都有两个子节点</p><h3 id="完全二叉树" tabindex="-1"><a class="header-anchor" href="#完全二叉树"><span>完全二叉树</span></a></h3><p>除了最下一层的叶节点外，其他各层的节点数都达到最大个数，并且只能缺少右侧的若干节点，左侧的不能缺少</p><h3 id="二叉搜索树-二叉排序树-二叉查询树" tabindex="-1"><a class="header-anchor" href="#二叉搜索树-二叉排序树-二叉查询树"><span>二叉搜索树/二叉排序树/二叉查询树</span></a></h3>',12)),r("p",null,[c(t,{href:"./12.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.md"},{default:d(()=>e[0]||(e[0]=[p("跳转")])),_:1,__:[0]})])])}const g=a(h,[["render",l]]),f=JSON.parse('{"path":"/notes/algorithm/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"二叉树","lang":"zh-CN","frontmatter":{"title":"二叉树","createTime":"2023/12/22 14:16:49","permalink":"/notes/algorithm/数据结构/二叉树/","description":"介绍 如果树中每个节点最多只能有两个子节点，这样的树就称为 二叉树 二叉树可以为空，也就是没有节点 若二叉树不为空，则它由根节点和称为其左子树 TL 和右子树 TR 的两个不相交的二叉树组成 特性 一个二叉树第 i 层的最大节点数为: 2^(i-1) i >= 1 深度为 k 的二叉树有最大节点总数为: 2^k-1 k >= 1 对任何非空二叉树 T ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉树\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.huankong.top/notes/algorithm/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%A0%91/"}],["meta",{"property":"og:site_name","content":"幻空博客"}],["meta",{"property":"og:title","content":"二叉树"}],["meta",{"property":"og:description","content":"介绍 如果树中每个节点最多只能有两个子节点，这样的树就称为 二叉树 二叉树可以为空，也就是没有节点 若二叉树不为空，则它由根节点和称为其左子树 TL 和右子树 TR 的两个不相交的二叉树组成 特性 一个二叉树第 i 层的最大节点数为: 2^(i-1) i >= 1 深度为 k 的二叉树有最大节点总数为: 2^k-1 k >= 1 对任何非空二叉树 T ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"readingTime":{"minutes":1,"words":300},"git":{},"autoDesc":true,"filePathRelative":"notes/algorithm/2.数据结构/11.二叉树.md","headers":[]}');export{g as comp,f as data};
