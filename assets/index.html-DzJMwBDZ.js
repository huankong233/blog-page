import{_ as e,c as a,a as d,o as r}from"./app-D7GTOmel.js";const o={};function p(n,t){return r(),a("div",null,t[0]||(t[0]=[d('<h2 id="声明包" tabindex="-1"><a class="header-anchor" href="#声明包"><span>声明包</span></a></h2><p>使用 <code>package</code> 关键字声明当前文件的位置 (IDEA 会自动管理)</p><h2 id="导入包" tabindex="-1"><a class="header-anchor" href="#导入包"><span>导入包</span></a></h2><p>使用 <code>import</code> 关键字导入包, 需要包含到最后一级类的名字</p><h2 id="访问控制" tabindex="-1"><a class="header-anchor" href="#访问控制"><span>访问控制</span></a></h2><p>一共有四种访问权限</p><table><thead><tr><th></th><th>当前类</th><th>同一个包下的类</th><th>不同包下的子类</th><th>不同包下的类</th></tr></thead><tbody><tr><td>public</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>protected</td><td>✓</td><td>✓</td><td>✓</td><td>×</td></tr><tr><td>默认</td><td>✓</td><td>✓</td><td>×</td><td>×</td></tr><tr><td>private</td><td>✓</td><td>×</td><td>×</td><td>×</td></tr></tbody></table><p>如果使用了 <code>private</code> 定义了类的构造函数, 那么这个类就无法被直接实例化</p><p>除非编写一个静态方法去手动实例化类</p>',9)]))}const i=e(o,[["render",p]]),s=JSON.parse('{"path":"/notes/java/%E5%AD%A6%E4%B9%A0/%E5%8C%85%E5%92%8C%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/","title":"包和访问控制","lang":"zh-CN","frontmatter":{"title":"包和访问控制","createTime":"2025/07/23 15:43:15","permalink":"/notes/java/学习/包和访问控制/","description":"声明包 使用 package 关键字声明当前文件的位置 (IDEA 会自动管理) 导入包 使用 import 关键字导入包, 需要包含到最后一级类的名字 访问控制 一共有四种访问权限 如果使用了 private 定义了类的构造函数, 那么这个类就无法被直接实例化 除非编写一个静态方法去手动实例化类","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"包和访问控制\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.huankong.top/notes/java/%E5%AD%A6%E4%B9%A0/%E5%8C%85%E5%92%8C%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/"}],["meta",{"property":"og:site_name","content":"幻空博客"}],["meta",{"property":"og:title","content":"包和访问控制"}],["meta",{"property":"og:description","content":"声明包 使用 package 关键字声明当前文件的位置 (IDEA 会自动管理) 导入包 使用 import 关键字导入包, 需要包含到最后一级类的名字 访问控制 一共有四种访问权限 如果使用了 private 定义了类的构造函数, 那么这个类就无法被直接实例化 除非编写一个静态方法去手动实例化类"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"readingTime":{"minutes":0.55,"words":166},"git":{},"autoDesc":true,"filePathRelative":"notes/java/1.学习/8.包和访问控制.md","headers":[]}');export{i as comp,s as data};
