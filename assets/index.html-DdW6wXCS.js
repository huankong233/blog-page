import{_ as s,c as e,a,o as t}from"./app-D7GTOmel.js";const n={};function l(h,i){return t(),e("div",null,i[0]||(i[0]=[a(`<h2 id="创建" tabindex="-1"><a class="header-anchor" href="#创建"><span>创建</span></a></h2><p>如果需要在主函数中使用某个函数，就需要定义一个函数实现，而且需要写在主函数之前</p><h3 id="定义一个函数原型" tabindex="-1"><a class="header-anchor" href="#定义一个函数原型"><span>定义一个函数原型</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">返回值类型 函数名称</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">函数参数...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="定义一个函数实现" tabindex="-1"><a class="header-anchor" href="#定义一个函数实现"><span>定义一个函数实现</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">返回值类型 函数名称</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">函数参数...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">])</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">函数名称</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">函数参数...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,8)]))}const d=s(n,[["render",l]]),c=JSON.parse('{"path":"/notes/c/%E9%AB%98%E7%BA%A7/%E5%87%BD%E6%95%B0/","title":"函数","lang":"zh-CN","frontmatter":{"title":"函数","createTime":"2024/03/09 16:52:24","permalink":"/notes/c/高级/函数/","description":"创建 如果需要在主函数中使用某个函数，就需要定义一个函数实现，而且需要写在主函数之前 定义一个函数原型 定义一个函数实现 使用","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.huankong.top/notes/c/%E9%AB%98%E7%BA%A7/%E5%87%BD%E6%95%B0/"}],["meta",{"property":"og:site_name","content":"幻空博客"}],["meta",{"property":"og:title","content":"函数"}],["meta",{"property":"og:description","content":"创建 如果需要在主函数中使用某个函数，就需要定义一个函数实现，而且需要写在主函数之前 定义一个函数原型 定义一个函数实现 使用"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"readingTime":{"minutes":0.38,"words":113},"git":{},"autoDesc":true,"filePathRelative":"notes/c/2.高级/1.函数.md","headers":[]}');export{d as comp,c as data};
